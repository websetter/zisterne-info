{{ services.lastSeen.setLastSeenMaxCount(config("Ceres.item.lists.last_seen_number")) }}

{{ component( "ZisterneInfo::Item.Components.VariationSelect" ) }}
{{ component( "ZisterneInfo::Item.Components.ItemImageCarousel" ) }}
{{ component( "ZisterneInfo::Item.Components.AddToWishList" ) }}
{{ component( "Ceres::Item.Components.OrderProperties" ) }}
{{ component( "Ceres::Item.Components.OrderPropertyList" ) }}
{{ component( "ZisterneInfo::Item.Components.SingleItem" ) }}
{{ component( "Ceres::Item.Components.GraduatedPrices" ) }}
{{ component( "ZisterneInfo::Basket.Components.AddToBasket" ) }}
{{ component( "Ceres::Item.Components.ItemBundle" ) }}

{% set lang = services.sessionStorage.getLang() %}

{% set crossSellingItemsAccessory = services.item.getItemCrossSellingList(item.documents[0].data.item.id, "Accessory") %}

<single-item v-cloak template="#vue-single-item" :item-data="{{ item | json_encode }}" :variation-list-data="{{ variations | json_encode }}" :attribute-name-map="{{attributeNameMap | json_encode}}">
    <div slot="BeforePrice">{{ LayoutContainer.show("Ceres::SingleItem.BeforePrice", item.documents[0].data) }}</div>
    <div slot="AfterPrice">{{ LayoutContainer.show("Ceres::SingleItem.AfterPrice", item.documents[0].data) }}</div>
    <div slot="BeforeAddToBasket">{{ LayoutContainer.show("Ceres::SingleItem.BeforeAddToBasket", item.documents[0].data) }}</div>
    <div slot="AfterAddToBasket">{{ LayoutContainer.show("Ceres::SingleItem.AfterAddToBasket", item.documents[0].data) }}</div>
    <div slot="AdditionalContentAfterAddToBasket">{{ LayoutContainer.show("Ceres::SingleItem.AdditionalContentAfterAddToBasket", item.documents[0].data) }}</div>
    <div slot="AdditionalContentAfterVAT">{{ LayoutContainer.show("Ceres::SingleItem.AdditionalContentAfterVAT", item.documents[0].data) }}</div>
    <template slot="AddDetailTabs">{{ LayoutContainer.show("Ceres::SingleItem.AddDetailTabs", item.documents[0].data) }}</template>
    <template slot="AddDetailTabsContent">{{ LayoutContainer.show("Ceres::SingleItem.AddDetailTabsContent", item.documents[0].data) }}</template>
    <div slot="ItemListContainer">{{ LayoutContainer.show("Ceres::SingleItem.ItemListContainer", item) }}</div>
    <div slot="FeedbackContainer">{{ LayoutContainer.show("Ceres::SingleItem.FeedbackContainer", item) }}</div>
    <div slot="Eigenschaft">
      {%  for variationProperty in item.documents[0].data.variationProperties %}
      	 {% if variationProperty.property.id == 1 %}
                    <!-- {{ variationProperty.property.names.name }}-->
      	   <p>Bereits {{ variationProperty.values.value }} Mal verkauft.</p>
           <hr>
      	{% endif %}
      {% endfor %}
      </div>
      <div slot="crossSellingItemsAccessory">
        <div class="row">
            <div class="col-xs-12">

                {% if crossSellingItemsAccessory | length > 0 %}

                    {% set crossAccessoryItemIds = [] %}

                    {% for crossAccessoryItem in crossSellingItemsAccessory %}
                        {% if crossAccessoryItemIds | length < 16 %}
                            {% set crossAccessoryItemIds = crossAccessoryItemIds|merge([crossAccessoryItem.crossItemId]) %}
                        {% endif %}
                    {% endfor %}

                    {% set crossAccessoryItemDetails = services.itemLoader.loadForTemplate('ZisterneInfo::ItemList.ItemListView', itemLoaderPresets.items, {'itemIds':crossAccessoryItemIds}) %}
                    <ul class="product-list row grid crossselling-list crossselling-accessory">
                        {% for item in crossAccessoryItemDetails.documents %}
                            <li class="col-xs-6 col-md-3">
                                {% include "ZisterneInfo::Category.Item.Partials.CategoryListItem" with { 'item': item } %}
                            </li>
                        {% endfor %}
                    </ul>
                {% endif %}

            </div>
        </div><!-- ./ZubehÃ¶r -->
    </div>

</single-item>
