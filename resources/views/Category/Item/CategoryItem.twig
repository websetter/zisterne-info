{% extends getPartial('page-design') %}
{% import "Ceres::Category.Macros.CategoryTree" as Tree %}
{% import "Ceres::PageDesign.Macros.LayoutContainer" as LayoutContainer %}

{% block PageBody %}

    {{ component( "ZisterneInfo::ItemList.Components.Filter.ItemFilterList") }}
    {{ component( "Ceres::ItemList.Components.Filter.ItemFilterTagList") }}
    {{ component( "ZisterneInfo::ItemList.Components.ItemList") }}
    {{ component( "Ceres::ItemList.Components.CategoryImageCarousel") }}
    {{ component( "Ceres::ItemList.Components.ItemListSorting") }}
    {{ component( "Ceres::ItemList.Components.ItemsPerPage") }}
    {{ component( "Ceres::ItemList.Components.Pagination") }}
    {{ component( "ZisterneInfo::ItemList.Components.CategoryItem" ) }}

    {% set shippingCat = config("Ceres.global.shippingCostsCategoryId") %}

<div class="container">
  <div class="row">
    {% if ceresConfig.header.showNavBars == "side" or ceresConfig.header.showNavBars == "both" %}
      <aside class="col-xs-12 col-md-3">
        <div class="sidebar-categories hidden-m-down">
          <p class="asideHeadline">Kategorien</p>
            {{ include('ZisterneInfo::PageDesign.Partials.Header.SideNavigation.twig') }}
        </div>
        {{ LayoutContainer.show("Ceres::CategoryItem.SideNavBarBottom") }}
        <div class="filterPanel">
            <p class="asideHeadline">Produktfilter</p>
            {% set overrideSearchFilters = LayoutContainer.show("Ceres::Search.Filter", facets ) %}
            {% if overrideSearchFilters | trim is empty %}
                <item-filter-list :facet-data="{{ facets | json_encode }}"></item-filter-list>
            {% else %}
                {{ overrideSearchFilters }}
            {% endif %}
          </div>
            <p class="asideHeadline">Sortierung</p>
          <item-list-sorting template="#vue-item-list-sorting" :sorting-list="{{ searchOptions.sorting | json_encode }}" :default-sorting="{{ searchOptions.defaultSorting | json_encode }}"></item-list-sorting>
      <items-per-page
              template="#vue-items-per-page"
              :pagination-values="{{ searchOptions.itemsPerPage | json_encode }}"></items-per-page>
      </aside>
    {% endif %}

    <main class="{% if ceresConfig.header.showNavBars == "side" or ceresConfig.header.showNavBars == "both" %}col-md-9 {% endif %}col-xs-12 categoriegrid page-content categoryItem cat-id-{{ category.id}}">
        <div class="catPic">
            <div class="catIntro">
              <h1 class="category-title">{{ category.details[0].name }}</h1>
              <h2 class="category-subtitle">{{ category.details[0].shortDescription | raw }}</h2>
            </div>
            <img src="/documents/{{category.details[0].image2Path}}" alt="">
          </div>
          <div id="category-description-container" class="category-description">{{ category.details[0].description | raw }}</div>


        <!-- TMP Muss Angepasste werden wenn SubCat exist-->
        <div class="subCat">
          <div class="row">
            <div class="col-xs-12 col-sm-4"><a class="subCatTitle" href="/" title="/"><span>Für Garten</span></a></div>
            <div class="col-xs-12 col-sm-4"><a class="subCatTitle" href="/" title="/"><span>Für Haus</span></a></div>
            <div class="col-xs-12 col-sm-4"><a class="subCatTitle" href="/" title="/"><span>Retention</span></a></div>
          </div>
        </div>
        <!-- ENDE TMP -->

        <div id="twig-rendered-item-list" class="item-list-frame{% if ceresConfig.item.loadingAnimationType == "blur" %} blur-effect{% endif %}">
            {% if ceresConfig.item.loadingAnimationType != "blur" %}
                {% include "Ceres::ItemList.Partials.LoadingAnimation" %}
            {% endif %}

            <ul class="product-list row grid" v-is-loading-watcher="$store.state.itemList.isLoading">
                {% for item in itemList %}
                    <li class="col-xs-12 col-sm-6 col-md-6 col-lg-4">
                        {% include "ZisterneInfo::Category.Item.Partials.CategoryListItem" with { 'item': item, 'shippingCat': shippingCat } %}
                    </li>
                {% endfor %}
            </ul>
        </div>
        <div id="vue-rendered-item-list" style="display:none">
            <item-list template="#vue-item-list" :total-items-data="{{ itemCountTotal }}" :category-id="{{ category.id }}"></item-list>
        </div>
        <hr>
        <div id="category-description-container2" class="category-description">{{ category.details[0].description2 | raw }}</div>
    </main>

  </div>
</div>
{% endblock %}

{% block PartialHead %}
    <script type="application/ld+json">{"@context": "http://schema.org","@type": "WebSite","url": "{{ webstoreConfig.domainSsl }}","potentialAction":{"@type": "SearchAction","target": "{{ domainSsl }}/search?query={search_term}","query-input": "required name=search_term"}}</script>

    {% if currentPage-1 > 0 %}
        <link rel="prev" href="{{ webstoreConfig.domainSsl }}?{{ query | merge({'page' : currentPage-1 }) | url_encode }}" />
    {% endif %}

    {% if currentPage+1 <= pageMax %}
        <link rel="next" href="{{ webstoreConfig.domainSsl }}?{{ query | merge({'page' : currentPage+1 }) | url_encode }}" />
    {% endif %}

    <title>{% if category.details[0].metaTitle %}{{ category.details[0].metaTitle }}{% else %}{{ category.details[0].name }}{% endif %} | {{ trans("Ceres::Template.headerCompanyName") }}</title>

    <meta name="description" content="{{ category.details[0].metaDescription }}">
    <meta name="keywords" content="{{ category.details[0].metaKeywords }}">

    <meta name="robots" content="{{ metaRobots }}">
{% endblock %}
