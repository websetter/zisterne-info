{{ component( "Ceres::Basket.Components.AddToBasket" ) }}

{% import "Ceres::PageDesign.Macros.LayoutContainer" as LayoutContainer %}
{% import "Ceres::PageDesign.Macros.ItemName" as ItemName %}

{% set image = item.data.images.all | first %}
{% set itemUrl =  item.data | itemURL %}

{% if enableCarousel is not defined %}
    {% set enableCarousel = ceresConfig.item.enableImageCarousel %}
{% endif %}

<article class="product-inner">
    <div class="thumb-inner">
        <div class="thumb-image">
            <div class="square-container">
                <div class="square-inner main-image">
                    <category-image-carousel
                        template="#vue-category-image-carousel"
                        :image-urls-data="{{ item.data.images | json_encode() }} | itemImages('urlMiddle')"
                        alt-text="{{ ItemName.get(item.data | itemName, item.data.variation.bundleType) }}"
                        item-url="{{ itemUrl }}"
                        :show-dots="{{ ceresConfig.item.categoryShowDots | json_encode }}"
                        :show-nav="{{ ceresConfig.item.categoryShowNav | json_encode }}"
                        :enable-carousel="{{ enableCarousel | json_encode }}">
                    </category-image-carousel>

                    <noscript>
                        <a href="{{ itemUrl }}">
                            <img class="img-fluid" src="{{ image.urlMiddle }}">
                        </a>
                    </noscript>
                </div>
            </div>
        </div>
        <hr>
        <div class="thumb-content">
          <a href="{{ itemUrl }}" class="thumb-title">
              {{ ItemName.get(item.data | itemName, item.data.variation.bundleType) }}
          </a>
          {{ LayoutContainer.show("Ceres::CategoryItem.BeforePrices", item.data) }}         

          <div class="prices">
              {% if item.data.prices.rrp is defined and item.data.prices.rrp.price.value != 0 and item.data.prices.rrp.price.value > item.data.prices.default.unitPrice.value %}
                  <del class="crossprice">
                     {{ trans("ZisterneInfo::Template.UVP") }} {{ item.data.prices.rrp.price.formatted }}
                  </del>
              {% endif %}
              <div class="price">
                  {{ item.data.prices.default.unitPrice.formatted }}
              </div>
              {% if not (item.data.unit.unitOfMeasurement == 'C62' and item.data.unit.content == 1) %}
                  <div class="category-unit-price">
                      <span>{{ item.data.unit.content }}</span>
                      <span>{{ item.data.unit.names.name }}</span>

                      {% if item.data.variation.mayShowUnitPrice %}
                          | {{ item.data.prices.default.basePrice }}
                      {% endif %}
                  </div>
              {% endif %}
          </div>
          {{ LayoutContainer.show("Ceres::CategoryItem.AfterPrices", item.data) }}
        </div>
        <hr>
    </div>
</article>
